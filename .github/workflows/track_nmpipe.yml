# .github/workflows/tests.yml
name: TRACK_NMRPIPE
on:

  push:
    branches: [ main ]

#  schedule:
#    - cron: "0,10,20,30,40,50 * * * *"

  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Get current time
        uses: srfrnk/current-time@master
        id: 'current-time'
        with:
          format: 'YYYY-MM-DDTHH:mm:ssZ'

      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v2

      - name: Install Python packages
        uses: py-actions/py-dependency-install@v2
        with:
          path: .github/workflows/requirements.txt

      - name: Get pipe version
        run: |
          python .github/workflows/scripts/get_pipe_version.py > CURRENT_PIPE_VERSION

      - name: Download nmrpipe if not current
        id: download
        run: |
          if ! cmp --silent -- CURRENT_PIPE_VERSION PIPE_VERSION; then
            python .github/workflows/scripts/get_pipe_urls.py > PIPE_URLS_AND_CHECKSUMS
            mkdir MIRROR
            for url in $(python3 .github/workflows/scripts/list_urls.py PIPE_URLS_AND_CHECKSUMS); do
              file_name=$(python3 .github/workflows/scripts/url_to_filename.py $url)
              wget $url -nv -O MIRROR/$file_name
            done
            mv CURRENT_PIPE_VERSION PIPE_VERSION
            echo DOWNLOAD=1 >> $GITHUB_ENV
          else
            echo DOWNLOAD=0 >> $GITHUB_ENV
          fi

      - name: Do check sums
        if: ${{ env.DOWNLOAD }} == '1'
        run:  |
          python .github/workflows/scripts/cksum.py "PIPE_URLS_AND_CHECKSUMS"

      # Runs a set of commands using the runners shell
      - name: Create a date stamp
        if: ${{ env.DOWNLOAD }} == '1'
        run: |
          touch ./DATE_STAMP
          echo ${{ steps.current-time.outputs.formattedTime }} > ./DATE_STAMP

      - name: Put nmrpipe version in environment variable
        if: ${{ env.DOWNLOAD }} == '1'
        run: |
          echo PIPE_VERSION=`cat PIPE_VERSION`>> $GITHUB_ENV

      - name: release
        if: ${{ env.DOWNLOAD }} == '1'
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: nmrpipe-${{ env.CURRENT_PIPE_VERSION }}
          tag_name: nmrpipe-${{ env.CURRENT_PIPE_VERSION }}
          body: test
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload
        if: ${{ env.DOWNLOAD }} == '1'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag_name=nmrpipe-${{ env.CURRENT_PIPE_VERSION }}
          hub release edit $(find ./MIRROR -type f -name "*" -printf "-a %p ") -m "" "$tag_name"
          hub release edit -a CURRENT_PIPE_VERSION -m "" "$tag_name"
          hub release edit -a DATE_STAMP -m "" "$tag_name"
          hub release edit -a PIPE_URLS_AND_CHECKSUMS -m "" "$tag_name"

      - name: Remove mirror directory
        if: ${{ env.DOWNLOAD }} == '1'
        run: |
          rm -rf MIRROR
          rm PIPE_URLS_AND_CHECKSUMS
          rm DATE_STAMP

#      - name: release
#        uses: actions/create-release@v1
#        id: create_release
#        with:
#          draft: false
#          prerelease: false
#          release_name: nmrpipe-${{ env.CURRENT_PIPE_VERSION }}
#          tag_name: nmrpipe-${{ env.CURRENT_PIPE_VERSION }}
#          body: test
#        env:
#          GITHUB_TOKEN: ${{ github.token }}
#
#      - name: upload artifact
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ github.token }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./MIRROR/binval.com
#          asset_name: binval.com
#          asset_content_type: application/text

#       - name: Install SSH key
#         uses: shimataro/ssh-key-action@v2
#         with:
#           key: ${{ secrets.NMRPIPE_PRIVATE_KEY }}
#           name: id_ed25519 # optional
#           known_hosts: ${{ secrets.KNOWN_HOST_GITHUB }}
# #          config: ${{ secrets.CONFIG }} # ssh_config; optional
#           if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)

      - name: commit
        if: ${{ env.DOWNLOAD }} == '1'
        uses: EndBug/add-and-commit@v7

        with:
          message: nmrpipe-${{ env.CURRENT_PIPE_VERSION }}
          branch: main
          add: PIPE_VERSION


